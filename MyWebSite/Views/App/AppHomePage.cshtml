@model MyWebSite.Models.appModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/Content/css/app.css" rel="stylesheet" />
</head>

<style>
    * {
        box-sizing: border-box;
    }

    body {
        background-color: #f1f1f1;
    }

    #InfoForm {
        background-color: #ffffff;
        margin: 100px auto;
        font-family: Raleway;
        padding: 40px;
        width: 70%;
        min-width: 300px;
    }

    h1 {
        text-align: center;
    }

    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }

    select {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }

        /* Mark input boxes that gets an error on validation: */
        input.invalid {
            background-color: #ffdddd;
        }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #4CAF50;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        font-family: Raleway;
        cursor: pointer;
    }

        button:hover {
            opacity: 0.8;
        }

    #prevBtn {
        background-color: #bbbbbb;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #4CAF50;
        }
</style>

<body>


    <form id="InfoForm" method="post">
        <h1>PHIẾU ĐIỀN THÔNG TIN CẦN THIẾT:</h1>
        <!-- One "tab" for each step in the form: -->
        <div class="tab">
            Thông tin cơ bản:
            <p>@Html.EditorFor(model => model.thongtinkhaibao.HoTenNguoiKhaiBao, new { htmlAttributes = new { @class = "form-control", placeholder = "Họ và tên người thông báo..." } })</p>
            <p>@Html.EditorFor(model => model.thongtinkhaibao.DiaChiNguoiKhaiBao, new { htmlAttributes = new { @class = "form-control", placeholder = "Địa chỉ..." } })</p>
            <p>@Html.EditorFor(model => model.thongtinkhaibao.SoDienThoai, new { htmlAttributes = new { @class = "form-control", placeholder = "Số điện thoại liên hệ..." } })</p>
            <p>@Html.EditorFor(model => model.thongtinkhaibao.NoiDungKhaiBao, new { htmlAttributes = new { @class = "form-control", placeholder = "Nội dung khai báo..." } })</p>
        </div>
        <div class="tab">
            Thông tin trẻ:

            <p>@Html.EditorFor(model => model.thongtinkhaibao.HoTenTre, new { htmlAttributes = new { @class = "form-control", placeholder = "Họ tên trẻ..." } })</p>
            <p>@Html.EditorFor(model => model.thongtinkhaibao.Tuoi, new { htmlAttributes = new { @class = "form-control", placeholder = "Độ tuổi của trẻ..." } })</p>
            <p>@Html.EditorFor(model => model.thongtinkhaibao.DiaChiTre, new { htmlAttributes = new { @class = "form-control", placeholder = "Địa chỉ..." } })</p>
            
            @Html.DropDownListFor(m => m.thongtinkhaibao.GioiTinh, new List<SelectListItem>
                   { new SelectListItem{Text="Nam", Value="Nam"},
                     new SelectListItem{Text="Nữ", Value="Nữ"}}, "Chọn giới tính")
           </div>
        <div class="tab">
            Tổ chức bảo trợ:

            <p>
                @Html.DropDownListFor(model => model.thongtinkhaibao.ToChucTrinhBao, (IEnumerable<SelectListItem>)ViewBag.tochuc)
            </p>
            <p>@Html.EditorFor(model => model.thongtinkhaibao.ThongTinThem, new { htmlAttributes = new { @class = "form-control", placeholder = "Thông tin thêm..." } })</p>
        </div>
        <div style="overflow:auto;">
            <div style="float:right;">
                <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
            </div>
        </div>
        <!-- Circles which indicates the steps of the form: -->
        <div style="text-align:center;margin-top:40px;">
            <span class="step"></span>
            <span class="step"></span>
            <span class="step"></span>
            <span class="step"></span>
        </div>
    </form>


    <style>
        .swal2-popup {
            display: none;
            position: relative;
            box-sizing: border-box;
            flex-direction: column;
            justify-content: center;
            width: 50%;
            max-width: 100%;
            padding: 1.25em;
            border: none;
            border-radius: .3125em;
            background: #fff;
            font-family: arial, inherit;
            font-size: 14px;
        }
    </style>
    <div style="display:none">
        <div id="alert">
            <h2>Đây là một website vì cộng đồng </h2>
            <p>Mục đích của chúng tôi là đưa ra những giải pháp hỗ trợ kịp thời cho trẻ em Việt Nam</p>
            <p>Những trường hợp mà chúng tôi có thể hỗ trợ như</p>
            <p style="color: red; font-weight:bold">Trẻ em bị xâm hại thể xác và tinh thần</p>
            <p style="color: red; font-weight:bold">Trẻ em bị bắt cóc</p>
            <p style="color: red; font-weight:bold">Trẻ gặp khó khăn trong giao tiếp hoặc tự kỉ</p>

        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js" type="text/javascript"></script>


    @if (Model.thongtinkhaibao != null)
    {
        <script type="text/javascript">
            $(function () {
                Swal.fire({
                    title: 'Cảm ơn bạn đã cung cấp thông tin cho chúng tôi',
                    
                });
            });
        </script>
    }



    <script type="text/javascript">
        var content = $("#alert").html();
                Swal.fire({
                    title: 'Vì trẻ em',
                    html: content,
                    icon: 'warning'
                });


    </script>
    <script>
        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the current tab

        function showTab(n) {
          // This function will display the specified tab of the form...
          var x = document.getElementsByClassName("tab");
          x[n].style.display = "block";
          //... and fix the Previous/Next buttons:
          if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
          } else {
            document.getElementById("prevBtn").style.display = "inline";
          }
          if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
          } else {
            document.getElementById("nextBtn").innerHTML = "Next";
          }
          //... and run a function that will display the correct step indicator:
          fixStepIndicator(n)
        }

        function nextPrev(n) {
          // This function will figure out which tab to display
          var x = document.getElementsByClassName("tab");
          // Exit the function if any field in the current tab is invalid:
          if (n == 1 && !validateForm()) return false;
          // Hide the current tab:
          x[currentTab].style.display = "none";
          // Increase or decrease the current tab by 1:
          currentTab = currentTab + n;
          // if you have reached the end of the form...
          if (currentTab >= x.length) {
            // ... the form gets submitted:
              document.getElementById("InfoForm").submit(); 
          }
          // Otherwise, display the correct tab:
          showTab(currentTab);
        }

        function validateForm() {
          // This function deals with validation of the form fields
          var x, y, i, valid = true;
          x = document.getElementsByClassName("tab");
          y = x[currentTab].getElementsByTagName("input");
          // A loop that checks every input field in the current tab:
          for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value == "") {
              // add an "invalid" class to the field:
              y[i].className += " invalid";
              // and set the current valid status to false
              valid = false;
            }
          }
          // If the valid status is true, mark the step as finished and valid:
          if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
          }
          return valid; // return the valid status
        }

        function fixStepIndicator(n) {
          // This function removes the "active" class of all steps...
          var i, x = document.getElementsByClassName("step");
          for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
          }
          //... and adds the "active" class on the current step:
          x[n].className += " active";
        }
    </script>

</body>
</html>
